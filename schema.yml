openapi: 3.0.3
info:
  title: Blog API
  version: 1.0.0
  description: Документация API для тестового задания
paths:
  /comments/:
    get:
      operationId: comments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - comments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: comments_create
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /comments/{id}/:
    get:
      operationId: comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this comment.
        required: true
      tags:
      - comments
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /notifications/:
    get:
      operationId: notifications_list
      description: |-
        Вьюсет для уведомлений
        - Показывает только уведомления текущего пользователя
        - Метод для пометки как прочитанное
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
    post:
      operationId: notifications_create
      description: |-
        Вьюсет для уведомлений
        - Показывает только уведомления текущего пользователя
        - Метод для пометки как прочитанное
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /notifications/{id}/:
    get:
      operationId: notifications_retrieve
      description: |-
        Вьюсет для уведомлений
        - Показывает только уведомления текущего пользователя
        - Метод для пометки как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    put:
      operationId: notifications_update
      description: |-
        Вьюсет для уведомлений
        - Показывает только уведомления текущего пользователя
        - Метод для пометки как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    patch:
      operationId: notifications_partial_update
      description: |-
        Вьюсет для уведомлений
        - Показывает только уведомления текущего пользователя
        - Метод для пометки как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNotification'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
    delete:
      operationId: notifications_destroy
      description: |-
        Вьюсет для уведомлений
        - Показывает только уведомления текущего пользователя
        - Метод для пометки как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /notifications/{id}/mark_as_read/:
    post:
      operationId: notifications_mark_as_read_create
      description: Пометить уведомление как прочитанное
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /posts/:
    get:
      operationId: posts_list
      description: Вьюсет для постов блога с дополнительными действиями
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - posts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: posts_create
      description: Вьюсет для постов блога с дополнительными действиями
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /posts/{id}/:
    get:
      operationId: posts_retrieve
      description: Вьюсет для постов блога с дополнительными действиями
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: posts_update
      description: Вьюсет для постов блога с дополнительными действиями
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: posts_partial_update
      description: Вьюсет для постов блога с дополнительными действиями
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: posts_destroy
      description: Вьюсет для постов блога с дополнительными действиями
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /posts/{id}/add_product/:
    post:
      operationId: posts_add_product_create
      description: |-
        Добавление товара к посту
        Требуется product_id в теле запроса
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /posts/{id}/comments/:
    get:
      operationId: posts_comments_retrieve
      description: Получение всех комментариев к посту
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this post.
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /posts/{post_id}/comments/:
    get:
      operationId: posts_comments_retrieve_2
      description: Получение всех комментариев к посту
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - posts
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /products/:
    get:
      operationId: products_list
      description: |-
        Вьюсет для товаров (CRUD)
        - Создание/редактирование только для админов
        - Просмотр для всех
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_create
      description: |-
        Вьюсет для товаров (CRUD)
        - Создание/редактирование только для админов
        - Просмотр для всех
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /products/{id}/:
    get:
      operationId: products_retrieve
      description: |-
        Вьюсет для товаров (CRUD)
        - Создание/редактирование только для админов
        - Просмотр для всех
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_update
      description: |-
        Вьюсет для товаров (CRUD)
        - Создание/редактирование только для админов
        - Просмотр для всех
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_partial_update
      description: |-
        Вьюсет для товаров (CRUD)
        - Создание/редактирование только для админов
        - Просмотр для всех
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_destroy
      description: |-
        Вьюсет для товаров (CRUD)
        - Создание/редактирование только для админов
        - Просмотр для всех
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      tags:
      - schema
      security:
      - jwtAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        post:
          type: integer
        author:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - author
      - post
      - text
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
          maxLength: 255
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        extra_data: {}
        user:
          type: integer
      required:
      - message
      - user
    PaginatedCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PatchedComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        post:
          type: integer
        author:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedNotification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
          maxLength: 255
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        extra_data: {}
        user:
          type: integer
    PatchedPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comments:
          type: array
          items:
            type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: integer
        products:
          type: array
          items:
            type: integer
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_by:
          type: integer
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comments:
          type: array
          items:
            type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        content:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        author:
          type: integer
        products:
          type: array
          items:
            type: integer
      required:
      - author
      - content
      - title
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_by:
          type: integer
      required:
      - created_by
      - name
      - price
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
